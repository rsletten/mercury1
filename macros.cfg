[gcode_macro CG28]
gcode:
	{% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
	G28
	{% endif %}

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    {% set BED = params.BED|int %} ; Get bed temp from gcode
    {% set HOTEND = params.HOTEND|int %} ; Get nozzle temp from gcode
    #{% set CHAMBERTEMP = params.CHAMBER|default(0)|int %} ; Get chamber temp from gcode
    M104 S140 ; set hotend to no-ooze temp
    M190 S{BED} ; wait for bed temperature
    M117 Initializing...
    G90
    BED_MESH_CLEAR
    G28                            ; home all axes
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE
    CALIBRATE_Z
    M109 S{HOTEND} ; wait for extruder temperature
    ZEROG_PURGE
    G1 Z20 F3000                   ; move nozzle away from bed
    M117

[gcode_macro HOME]
gcode:
    CG28
    G1 X185 Y185 F7800

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F1800                 ; retract filament

    TURN_OFF_HEATERS

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    M84
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    M117

[gcode_macro PRIME_NOZZLE]
gcode:
    SAVE_GCODE_STATE NAME=PRIME_NOZZLE_STATE
    M117 Priming
    G90                 ; Absolute coordinates.
    M83                 ; Relative extruder mode.
    G92 E0
    ; Move to start of line.
    G1 Z10 F900
    G1 Y3 X3 F9000
    G1 Z0.2 F900
    ; Print the line.
    G91                ; Relative coordinates.
    G1 X100 E25 F1000  ; Extrude filament 25mm (how much it retracted in PRINT_END).
    G1 Y-2 F1000
    G1 X-60 E9 F1000    ; Print second part of the line.
    G1 E-0.5 F1000      ; Retract to avoid stringing.
    G1 X0.5 E-0.5 F1000    ; Wipe back to break string.
    G1 X-5.5 E0 F1000   ; Wipe forward to break string.
    RESTORE_GCODE_STATE NAME=PRIME_NOZZLE_STATE

[gcode_macro FILAMENT_UNLOAD]
gcode:
	M83                    # set extruder to relative extrusion
	G90                    # set toolhead to absolute position
	G1 Z80 F100000         
	G1 X150 Y50 F100000    # move up and to front/center to straighten filament path
	G1 E3  F300            # extrude slowly to soften tip of filament
	G1 E-30 F100000        # quickly yank filament back clear of hotend
	G1 E-80 F1800          # ensure filament is clear of extruder gears
	M82                    # set extruder to absolute extrusion

[gcode_macro FILAMENT_LOAD]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    G1 Z80 F100000
    G1 X150 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E75 F300            # extrude filament through into hotend
    G1 E30 F240            # slowly extrude through hotend to partially purge previous filament
    M82                    # set extruder to absolute extrusion

#[gcode_macro Z_TILT_ADJUST]
#rename_existing: _Z_TILT_ADJUST
#gcode:
#    CG28
#    _Z_TILT_ADJUST
#    G28 Z

[gcode_macro ZEROG_PURGE]
description: A purge macro that adapts to be near your actual printed objects

variable_adaptive_enable: True      # Change to False if you'd like the purge to be in the same spot every print
variable_z_height: 0.4              # Height above the bed to purge
variable_tip_distance: 10           # Distance between filament tip and nozzle before purge (this will require some tuning)
variable_purge_amount: 15         # Amount of filament to purge (40)
variable_flow_rate: 10              # Desired flow rate in mm3/s
variable_x_default: 10              # X location to purge, overwritten if adaptive is True
variable_y_default: 10              # Y location to purge, overwritten if adaptive is True
variable_size: 15                   # Size of the logo
variable_distance_to_object_x: 10   # Distance in x to the print area
variable_distance_to_object_y: 10   # Distance in y to the print area

### This section is for those who are using Moonraker's Update Manager for KAMP, or want a more verbose macro. ###

variable_display_parameters: True   # Display macro paramters in the console, useful for debugging the SETUP_ZEROG_PURGE call, or more verbosity.

gcode:

    {% if display_parameters == True %}
      { action_respond_info("adaptive_enable : %d" % (adaptive_enable))  }
      { action_respond_info("z_height        : %f" % (z_height))  }
      { action_respond_info("tip_distance    : %f" % (tip_distance))  }
      { action_respond_info("purge_amount    : %f" % (purge_amount))  }
      { action_respond_info("flow_rate       : %f" % (flow_rate))  }
      { action_respond_info("x_default       : %f" % (x_default))  }
      { action_respond_info("y_default       : %f" % (y_default))  }
      { action_respond_info("size            : %f" % (size))  }
      { action_respond_info("distance_to_object_x : %f" % (distance_to_object_x))  }
      { action_respond_info("distance_to_object_y : %f" % (distance_to_object_y))  }
    {% endif %}

    {% if adaptive_enable == True %}
        {% set all_points = printer.exclude_object.objects | map(attribute='polygon') | sum(start=[]) %}
        {% set x_origin = (all_points | map(attribute=0) | min | default(x_default + distance_to_object_x + size)) - distance_to_object_x - size %}
        {% set y_origin = (all_points | map(attribute=1) | min | default(y_default + distance_to_object_y + size)) - distance_to_object_y - size %}
        {% set x_origin = ([x_origin, 0] | max) %}
        {% set y_origin = ([y_origin, 0] | max) %}
    {% else %}
        {% set x_origin = x_default | float %}
        {% set y_origin = y_default | float %}
    {% endif %}
    {% set purge_move_speed = 2.31 * size * flow_rate / (purge_amount * 2.405) %}
    {% set prepurge_speed = flow_rate / 2.405 %}
    {% set travel_speed = printer.toolhead.max_velocity %}
    { action_respond_info( "x: " + x_origin|string + " y: " + y_origin|string + " purge_move_speed: " + purge_move_speed|string + " prepurge_speed: " + prepurge_speed|string ) }


    G92 E0                                                                              # Reset extruder
    G0 F{travel_speed*60}                                                               # Set travel speed
    G90                                                                                 # Absolute positioning
    G0 X{x_origin+size*0.7} Y{y_origin+size*0.5}                                        # Move to purge position
    G0 Z{z_height}                                                                      # Move to purge Z height
    M83                                                                                 # Relative extrusion mode
    G1 E{tip_distance} F{prepurge_speed*60}                                             # Move tip of filament to nozzle
    
    #Draw me like one of your french girls    
    G0 X{x_origin+size}     Y{y_origin+size*0.7} E{purge_amount*0.080} F{purge_move_speed*60}
    G0 X{x_origin+size}     Y{y_origin+size*0.4} E{purge_amount*0.067} F{purge_move_speed*60}
    G0 X{x_origin+size*0.5} Y{y_origin}          E{purge_amount*0.142} F{purge_move_speed*60}
    G0 X{x_origin}          Y{y_origin+size*0.4} E{purge_amount*0.142} F{purge_move_speed*60}
    G0 X{x_origin+size}     Y{y_origin+size}     E{purge_amount*0.259} F{purge_move_speed*60}
    G0 X{x_origin}          Y{y_origin+size}     E{purge_amount*0.222} F{purge_move_speed*60}
    G0 X{x_origin}          Y{y_origin+size*0.6} E{purge_amount*0.089} F{purge_move_speed*60}

    G1 E-.5 F2100                                                                       # Retract
    G0 Z{z_height*2}                                                                    # Z hop

    G92 E0                                                                              # Reset extruder distance
    M82                                                                                 # Absolute extrusion mode

[gcode_macro SETUP_ZEROG_PURGE]
gcode:
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=display_parameters   VALUE={params.DISPLAY_PARAMETERS|default(True)|int}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=adaptive_enable   VALUE={params.ADAPTIVE_ENABLE|default(True)|int}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=z_height      VALUE={params.Z_HEIGHT|default(0.4)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=tip_distance  VALUE={params.TIP_DISTANCE|default(10)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=purge_amount  VALUE={params.PURGE_AMOUNT|default(40)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=flow_rate     VALUE={params.FLOW_RATE|default(10)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=x_default     VALUE={params.X_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=y_default     VALUE={params.Y_DEFAULT|default(10)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=size          VALUE={params.SIZE|default(10)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=distance_to_object_x     VALUE={params.DISTANCE_TO_OBJECT_X|default(10)|float}
    SET_GCODE_VARIABLE MACRO=ZEROG_PURGE  VARIABLE=distance_to_object_y     VALUE={params.DISTANCE_TO_OBJECT_Y|default(10)|float}

########################################
############# Start Print ##############
########################################

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP=params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP=params.EXTRUDER_TEMP|default(245)|float %}

############# Startup Heating ##############

    M104 S150 #(Hotend idle temp)
    M140 S{BED_TEMP}
    M190 S{BED_TEMP}

################## Homing ##################
  
    G90 #(Absolute Coordinates)
    M83 #(Relative Extrusion)
    G28 #(Home All Axis)

################ Z probing #################

    ATTACH_PROBE_LOCK
    Z_TILT_ADJUST
    BED_MESH_CALIBRATE 
    CALIBRATE_Z 
    DOCK_PROBE_UNLOCK

    BED_MESH_PROFILE LOAD=default

    M104 S{EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}
    
    # Prime line
    PRIME_LINE
    

########################################
############## End Print ###############
########################################

[gcode_macro END_PRINT]
gcode:
    G91
    
    # Retract and wipe out Z
    G1 E-.75 Z0.2 F2700
    G1 X5 Y5 F3000
    
    # Present print
    G1 Z10 F1500
    G90
    G1 X255 Y250
    
    # Shut things down
    M107 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    M84 X Y E ;Disable motors

[gcode_macro PRIME_LINE]
gcode:
    # Move Z up a little to prevent scratching the surface
    #G1 Z1.0 F3000
    
    # Move to prime line position
    G1 X0.1 Y40 F5000.0
    
    # Move Z down to begin prime line
    G1 z0.2 F5000.0
    
    # Reset Extruder
    M83
    G92 E0
    
    # Draw prime lines
    G1 X0.1 Y200.0 Z0.3 F1500.0 E15
    G1 X0.4 Y200.0 Z0.3 F5000.0
    G1 X0.4 Y40 Z0.3 F1500.0 E30
    
    # Reset Extruder
    G92 E0

[gcode_macro INIT]
gcode:
    CG28
    ATTACH_PROBE_LOCK
    Z_TILT_ADJUST
    CALIBRATE_Z
    DOCK_PROBE_UNLOCK
   
    
